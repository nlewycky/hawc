# Generated by Django 2.1.2 on 2018-11-02 02:54

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('animal', '0002_auto_20181101_2154'),
        ('assessment', '0001_initial'),
        ('study', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataPivot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the title of the visualization (spaces and special-characters allowed).', max_length=128)),
                ('slug', models.SlugField(help_text='The URL (web address) used to describe this object (no spaces or special-characters).', verbose_name='URL Name')),
                ('settings', models.TextField(default='undefined', help_text='Paste content from a settings file from a different data-pivot, or keep set to "undefined".')),
                ('caption', models.TextField(blank=True, default='')),
                ('published', models.BooleanField(default=False, help_text='For assessments marked for public viewing, mark visual to be viewable by public', verbose_name='Publish visual for public viewing')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='SummaryText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('title', models.CharField(max_length=128)),
                ('slug', models.SlugField(help_text='The URL (web address) used on the website to describe this object (no spaces or special-characters).', unique=True, verbose_name='URL Name')),
                ('text', models.TextField(default='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.Assessment')),
            ],
            options={
                'verbose_name_plural': 'Summary Text Descriptions',
            },
        ),
        migrations.CreateModel(
            name='Visual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('slug', models.SlugField(help_text='The URL (web address) used to describe this object (no spaces or special-characters).', verbose_name='URL Name')),
                ('visual_type', models.PositiveSmallIntegerField(choices=[(0, 'animal bioassay endpoint aggregation'), (1, 'animal bioassay endpoint crossview'), (2, 'risk of bias heatmap'), (3, 'risk of bias barchart')])),
                ('prefilters', models.TextField(default='{}')),
                ('settings', models.TextField(default='{}')),
                ('caption', models.TextField(blank=True)),
                ('published', models.BooleanField(default=False, help_text='For assessments marked for public viewing, mark visual to be viewable by public', verbose_name='Publish visual for public viewing')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visuals', to='assessment.Assessment')),
                ('dose_units', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='assessment.DoseUnits')),
                ('endpoints', models.ManyToManyField(blank=True, help_text='Endpoints to be included in visualization', related_name='visuals', to='animal.Endpoint')),
                ('studies', models.ManyToManyField(blank=True, help_text='Studies to be included in visualization', related_name='visuals', to='study.Study')),
            ],
        ),
        migrations.CreateModel(
            name='DataPivotQuery',
            fields=[
                ('datapivot_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='summary.DataPivot')),
                ('evidence_type', models.PositiveSmallIntegerField(choices=[(0, 'Animal Bioassay'), (1, 'Epidemiology'), (4, 'Epidemiology meta-analysis/pooled analysis'), (2, 'In vitro'), (3, 'Other')], default=0)),
                ('export_style', models.PositiveSmallIntegerField(choices=[(0, 'One row per Endpoint-group/Result-group'), (1, 'One row per Endpoint/Result')], default=0, help_text='The export style changes the level at which the data are aggregated, and therefore which columns and types of data are presented in the export, for use in the visual.')),
                ('preferred_units', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), default=list, help_text='List of preferred dose-values, in order of preference. If empty, dose-units will be random for each endpoint presented. This setting may used for comparing percent-response, where dose-units are not needed, or for creating one plot similar, but not identical, dose-units.', size=None)),
                ('prefilters', models.TextField(default='{}')),
                ('published_only', models.BooleanField(default=True, help_text='Only present data from studies which have been marked as "published" in HAWC.', verbose_name='Published studies only')),
            ],
            bases=('summary.datapivot',),
        ),
        migrations.CreateModel(
            name='DataPivotUpload',
            fields=[
                ('datapivot_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='summary.DataPivot')),
                ('file', models.FileField(help_text='The data should be in unicode-text format, tab delimited (this is a standard output type in Microsoft Excel).', upload_to='data_pivot')),
            ],
            bases=('summary.datapivot',),
        ),
        migrations.AddField(
            model_name='datapivot',
            name='assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assessment.Assessment'),
        ),
        migrations.AlterUniqueTogether(
            name='visual',
            unique_together={('assessment', 'slug')},
        ),
        migrations.AlterUniqueTogether(
            name='summarytext',
            unique_together={('assessment', 'slug'), ('assessment', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='datapivot',
            unique_together={('assessment', 'slug')},
        ),
    ]
