# Generated by Django 2.1.2 on 2018-11-02 02:54

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnimalGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Short description of the animals (i.e. Male Fischer F344 rats, Female C57BL/6 mice)', max_length=80)),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('C', 'Combined'), ('R', 'Not reported')], max_length=1)),
                ('animal_source', models.CharField(blank=True, help_text='Laboratory and/or breeding details where animals were acquired', max_length=128)),
                ('lifestage_exposed', models.CharField(blank=True, help_text='Textual life-stage description when exposure occurred (examples include: "parental, PND18, juvenile, adult, continuous, multiple")', max_length=32)),
                ('lifestage_assessed', models.CharField(blank=True, help_text='Textual life-stage description when endpoints were measured (examples include: "parental, PND18, juvenile, adult, multiple")', max_length=32)),
                ('duration_observation', models.FloatField(blank=True, help_text='Numeric length of observation period, in days (fractions allowed)', null=True, verbose_name='Observation duration (days)')),
                ('generation', models.CharField(blank=True, choices=[('', 'N/A (not generational-study)'), ('P0', 'Parent-generation (P0)'), ('F1', 'First-generation (F1)'), ('F2', 'Second-generation (F2)'), ('F3', 'Third-generation (F3)'), ('F4', 'Fourth-generation (F4)'), ('Ot', 'Other')], default='', max_length=2)),
                ('comments', models.TextField(blank=True, help_text='Any addition notes for this animal-group.', verbose_name='Description')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DoseGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dose_group_id', models.PositiveSmallIntegerField()),
                ('dose', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('dose_units', 'dose_group_id'),
            },
        ),
        migrations.CreateModel(
            name='DosingRegime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_of_exposure', models.CharField(choices=[('OR', 'Oral'), ('OC', 'Oral capsule'), ('OD', 'Oral diet'), ('OG', 'Oral gavage'), ('OW', 'Oral drinking water'), ('I', 'Inhalation'), ('IG', 'Inhalation - gas'), ('IR', 'Inhalation - particle'), ('IA', 'Inhalation - vapor'), ('D', 'Dermal'), ('SI', 'Subcutaneous injection'), ('IP', 'Intraperitoneal injection'), ('IV', 'Intravenous injection'), ('IO', 'in ovo'), ('P', 'Parental'), ('W', 'Whole body'), ('M', 'Multiple'), ('U', 'Unknown'), ('O', 'Other')], help_text='Primary route of exposure. If multiple primary-exposures, describe in notes-field below', max_length=2)),
                ('duration_exposure', models.FloatField(blank=True, help_text='Length of exposure period (fractions allowed), used for sorting in visualizations', null=True, verbose_name='Exposure duration (days)')),
                ('duration_exposure_text', models.CharField(blank=True, help_text='Text-description of the exposure duration (ex: 21 days, 104 wks, GD0 to PND9, GD0 to weaning)', max_length=128, verbose_name='Exposure duration (text)')),
                ('num_dose_groups', models.PositiveSmallIntegerField(default=4, help_text='Number of dose groups, plus control', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Number of Dose Groups')),
                ('positive_control', models.NullBooleanField(choices=[(True, 'Yes'), (False, 'No'), (None, 'Unknown')], default=None, help_text='Was a positive control used?')),
                ('negative_control', models.CharField(choices=[('NR', 'Not-reported'), ('UN', 'Untreated'), ('VT', 'Vehicle-treated'), ('B', 'Untreated + Vehicle-treated'), ('Y', 'Yes (untreated and/or vehicle)'), ('N', 'No')], default='NR', help_text='Description of negative-controls used', max_length=2)),
                ('description', models.TextField(blank=True, help_text='Detailed description of dosing methodology (i.e. exposed via inhalation 5 days/week for 6 hours)')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
