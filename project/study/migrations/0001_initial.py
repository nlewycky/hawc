# Generated by Django 2.2 on 2019-04-20 04:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lit', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Study',
            fields=[
                ('reference_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='lit.Reference')),
                ('bioassay', models.BooleanField(default=False, help_text='Study contains animal bioassay data', verbose_name='Animal bioassay')),
                ('epi', models.BooleanField(default=False, help_text='Study contains epidemiology data', verbose_name='Epidemiology')),
                ('epi_meta', models.BooleanField(default=False, help_text='Study contains epidemiology meta-analysis/pooled analysis data', verbose_name='Epidemiology meta-analysis')),
                ('in_vitro', models.BooleanField(default=False, help_text='Study contains in-vitro data')),
                ('short_citation', models.CharField(help_text='How the study should be identified (i.e. Smith et al. (2012), etc.)', max_length=256)),
                ('full_citation', models.TextField(help_text='Complete study citation, in desired format.')),
                ('coi_reported', models.PositiveSmallIntegerField(choices=[(4, '---'), (0, 'Authors report they have no COI'), (1, 'Authors disclosed COI'), (5, 'Not reported; no COI is inferred based on author affiliation and/or funding source'), (6, 'Not reported; a COI is inferred based on author affiliation and/or funding source'), (3, 'Not reported'), (2, 'Unknown')], default=4, help_text='Was a conflict of interest reported by the study authors?', verbose_name='COI reported')),
                ('coi_details', models.TextField(blank=True, help_text='Details related to potential or disclosed conflict(s) of interest. When available, cut and paste the COI declaration with quotations. Provide details when a COI is inferred.', verbose_name='COI details')),
                ('funding_source', models.TextField(blank=True, help_text='When reported, cut and paste the funding source information with quotations, e.g., "The study was sponsored by Hoechst AG and Dow Europe".')),
                ('study_identifier', models.CharField(blank=True, help_text='Reference descriptor for assessment-tracking purposes (for example, "{Author, year, #EndNoteNumber}")', max_length=128, verbose_name='Internal study identifier')),
                ('contact_author', models.BooleanField(default=False, help_text='Was the author contacted for clarification of methods, results, or to request additional data?')),
                ('ask_author', models.TextField(blank=True, help_text='Details on correspondence between data-extractor and author (if author contacted). Redact confidential or personal information (e.g., email address).', verbose_name='Correspondence details')),
                ('published', models.BooleanField(default=False, help_text='If True, this study, study evaluation, and extraction details may be visible to reviewers and/or the public (if assessment-permissions allow this level of visibility). Team-members and project-management can view both published and unpublished studies.')),
                ('summary', models.TextField(blank=True, help_text='This field is often left blank, but used to add comments on data extraction, e.g., reference to full study reports or indicating which outcomes/endpoints in a study were not extracted.', verbose_name='Summary/extraction comments')),
                ('editable', models.BooleanField(default=True, help_text='Project-managers and team-members are allowed to edit this study.')),
            ],
            options={
                'verbose_name_plural': 'Studies',
                'ordering': ('short_citation',),
            },
            bases=('lit.reference',),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(upload_to='study-attachment')),
                ('study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='study.Study')),
            ],
        ),
    ]
